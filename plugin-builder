#!/usr/bin/env sh

set -e
filename=".env"
if [ ! -f "$filename" ]; then
    echo "Error: File .env not found."
    exit 1
fi
while IFS= read -r line; do   
    if echo "$line" | grep -q '^[[:space:]]*$'; then
        continue
    fi
    case "$line" in
        \#*)
            continue
            ;;
    esac
    var_name=$(echo "$line" | cut -d '=' -f 1)

    var_value=$(echo "$line" | cut -d '=' -f 2-)
    if echo "$line" | grep -q '=' && [ -n "$var_name" ] && [ -n "$(echo "$var_value" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')" ]; then
        export "$line"
  
        echo "Exported: $var_name=$(eval echo \$$var_name)"
    else
        echo "Ignored (wrong format or empty value): $line"
    fi
done < "$filename"

echo $IDEMPIERE_REPOSITORY
java -version
mvn -v

OPTIONS=

for arg in "$@"
do
  if [ "$arg" = "debug" ]; then
      OPTIONS="$OPTIONS -X"
      echo "Debug mode"
      shift
  fi

  if [ "$arg" = "commit" ]; then
      echo "Using commit qualifier"
      [ -z "$GIT_COMMIT" ] && echo "Set GIT_COMMIT variable first" && exit 1
      OPTIONS="$OPTIONS -DforceContextQualifier=$GIT_COMMIT"
      shift
  fi

  if [ "$arg" = "build" ]; then
      echo "Using build number qualifier"
      [ -z "$BUILD_NUMBER" ] && echo "Set BUILD_NUMBER variable first" && exit 1
      OPTIONS="$OPTIONS -DforceContextQualifier=$BUILD_NUMBER"
      shift
  fi
done

javac TargetPlatformPomGenerator.java
java TargetPlatformPomGenerator "$@"
mvn validate -Didempiere.target=com.ingeint.template.p2.targetplatform $OPTIONS
mvn verify -Didempiere.target=com.ingeint.template.p2.targetplatform $OPTIONS
javac TargetPlatformPluginTagger.java
java TargetPlatformPluginTagger "$@"
